/* THEMING START */
@use "@angular/material" as mat;

@import "vars";

// Light Theme Text
$dark-text: #000000;
$dark-positiv-color: #079455;
$dark-negativ-color: #d92d20;
$dark-primary-text: rgba($dark-text, 0.87);
$dark-accent-text: rgba($dark-primary-text, 0.54);
$dark-disabled-text: rgba($dark-primary-text, 0.38);
$dark-dividers: rgba($dark-primary-text, 0.12);
$dark-focused: rgba($dark-primary-text, 0.12);
$dark-link: #1b64f5;

$mat-light-theme-foreground: (
  base: black,
  divider: $dark-dividers,
  dividers: $dark-dividers,
  disabled: $dark-disabled-text,
  disabled-button: rgba($dark-text, 0.26),
  disabled-text: $dark-disabled-text,
  elevation: black,
  secondary-text: $dark-accent-text,
  hint-text: $dark-disabled-text,
  accent-text: $dark-accent-text,
  icon: $dark-accent-text,
  icons: $dark-accent-text,
  text: $dark-primary-text,
  slider-min: $dark-primary-text,
  slider-off: rgba($dark-text, 0.26),
  slider-off-active: $dark-disabled-text,
  link-color: $dark-link,
);

// Background config
// Light bg
$light-background: #ffffff;
$light-bg-darker-2: darken($light-background, 2%);
$light-bg-darker-5: darken($light-background, 5%);
$light-bg-darker-10: darken($light-background, 10%);
$light-bg-darker-20: darken($light-background, 20%);
$light-bg-darker-30: darken($light-background, 30%);
$light-bg-lighter-5: lighten($light-background, 5%);
$dark-bg-tooltip: lighten(#151e27, 20%);
$dark-bg-alpha-4: rgba(#151e27, 0.04);
$dark-bg-alpha-12: rgba(#151e27, 0.12);

$mat-light-theme-background: (
  background: $light-background,
  status-bar: $light-bg-darker-20,
  app-bar: $light-bg-darker-5,
  hover: $dark-bg-alpha-4,
  card: $light-bg-lighter-5,
  dialog: $light-bg-lighter-5,
  tooltip: $dark-bg-tooltip,
  disabled-button: $dark-bg-alpha-12,
  raised-button: $light-bg-lighter-5,
  focused-button: $dark-focused,
  selected-button: $light-bg-darker-20,
  selected-disabled-button: $light-bg-darker-30,
  disabled-button-toggle: $light-bg-darker-10,
  unselected-chip: $light-bg-darker-10,
  disabled-list-option: $light-bg-darker-10,
);

// Dark Theme text
$light-text: #ffffff;
$light-positiv-color: #47cd89;
$light-negativ-color: #f97066;
$light-primary-text: $light-text;
$light-accent-text: rgba($light-primary-text, 0.7);
$light-disabled-text: rgba($light-primary-text, 0.5);
$light-dividers: rgba($light-primary-text, 0.12);
$light-focused: rgba($light-primary-text, 0.12);
$light-link: #1bdef5;

$mat-dark-theme-foreground: (
  base: $light-text,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: rgba($light-text, 0.3),
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-accent-text,
  accent-text: $light-accent-text,
  icon: $light-text,
  icons: $light-text,
  text: $light-text,
  slider-min: $light-text,
  slider-off: rgba($light-text, 0.3),
  slider-off-active: rgba($light-text, 0.3),
  link-color: $light-link,
);

// Dark bg
$dark-background: $darkBackgroundColor;
$dark-bg-lighter-2: #151e27;
$dark-bg-lighter-5: lighten($dark-background, 5%);
$dark-bg-lighter-10: lighten($dark-background, 10%);
$dark-bg-lighter-20: lighten($dark-background, 20%);
$dark-bg-lighter-30: lighten($dark-background, 30%);
$light-bg-alpha-4: rgba(#ffffff, 0.04);
$light-bg-alpha-12: rgba(#ffffff, 0.12);

// Background palette for dark themes.
$mat-dark-theme-background: (
  background: $dark-background,
  status-bar: $dark-bg-lighter-20,
  app-bar: $dark-bg-lighter-5,
  hover: $light-bg-alpha-4,
  card: $dark-bg-lighter-5,
  dialog: $dark-bg-lighter-5,
  tooltip: $dark-bg-lighter-20,
  disabled-button: $light-bg-alpha-12,
  raised-button: $dark-bg-lighter-5,
  focused-button: $light-focused,
  selected-button: $dark-bg-lighter-20,
  selected-disabled-button: $dark-bg-lighter-30,
  disabled-button-toggle: $dark-bg-lighter-10,
  unselected-chip: $dark-bg-lighter-20,
  disabled-list-option: $dark-bg-lighter-10,
);

// Compute font config
@include mat.core();

// Theme Config

body {
  --primary-color: #000000;
  --primary-lighter-color: #bebecf;
  --primary-darker-color: #171744;
  --text-primary-color: #{$light-primary-text};
  --text-primary-lighter-color: #{$dark-primary-text};
  --text-primary-darker-color: #{$light-primary-text};
}
$mat-primary: (
  main: #1bdef5,
  lighter: #1b64f5,
  darker: #171744,
  200: #272660,
  // For slide toggle,
  contrast:
    (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    ),
);
$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);

body {
  --accent-color: #1bdef5;
  --accent-lighter-color: #1bdef5;
  --accent-darker-color: #2472a7;
  --text-accent-color: #{$light-primary-text};
  --text-accent-lighter-color: #{$dark-primary-text};
  --text-accent-darker-color: #{$light-primary-text};
}

$mat-accent: (
  main: #1bdef5,
  lighter: #1bdef5,
  darker: #2472a7,
  200: $light-link,
  // For slide toggle,
  contrast:
    (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    ),
);
$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);

body {
  --warn-color: #ff0000;
  --warn-lighter-color: #ffb3b3;
  --warn-darker-color: #ff0000;
  --text-warn-color: #{$light-primary-text};
  --text-warn-lighter-color: #{$dark-primary-text};
  --text-warn-darker-color: #{$light-primary-text};
}
$mat-warn: (
  main: #ff0000,
  lighter: #ffb3b3,
  darker: #ff0000,
  200: #ff0000,
  // For slide toggle,
  contrast:
    (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    ),
);
$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

$theme: (
  primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: false,
  foreground: $mat-light-theme-foreground,
  background: $mat-light-theme-background,
);
$altTheme: (
  primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: true,
  foreground: $mat-dark-theme-foreground,
  background: $mat-dark-theme-background,
);

// Theme Init
@include mat.all-component-themes($theme);

.darkTheme {
  @include mat.all-component-themes($altTheme);

  .dashboard-wallet-name {
    color: $light-text;
  }
  .dashboard-balance-name {
    color: $light-link;
  }
  .dashboard-amount-name {
    color: $light-accent-text;
  }
  .dashboard-currency-name {
    color: $light-accent-text;
  }
  .isPositiv {
    color: $light-positiv-color;
  }
  .isNegativ {
    color: $light-negativ-color;
  }

  .icon-color-link {
    color: $light-link;
  }

  .mat-mdc-card {
    --mdc-elevated-card-container-elevation: 1px 1px 1px 0px rgba(63, 62, 62, 1) !important;
  }

  background-color: $darkBackgroundColor;
  color: #ffffff;

  .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
    color: map-get($map: $mat-primary, $key: lighter);
  }

  .mat-mdc-card {
    background-color: $dark-bg-lighter-2 !important;
  }

  .mdc-switch.mdc-switch--selected .mdc-switch__track {
    background-color: rgb(97, 97, 97);
  }
}

// Specific component overrides, pieces that are not in line with the general theming

// Handle buttons appropriately, with respect to line-height
.mat-raised-button,
.mat-stroked-button,
.mat-flat-button {
  padding: 0 1.15em;
  margin: 0 0.65em;
  min-width: 3em;
  line-height: 36.4px;
}

.mat-standard-chip {
  padding: 0.5em 0.85em;
  min-height: 2.5em;
}

.material-icons {
  font-size: 24px;
  font-family: "Material Icons", "Material Icons";
}

/* THEMING END */

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: "Space Grotesk";
  font-size: 1em;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Space Grotesk";
}
table,
div,
span,
button,
th,
td,
tr {
  font-family: "Space Grotesk";
}

table {
  border-radius: 12px;
  background-color: var(--mat-table-background-color) !important;
  padding: 2px;
}

.mat-mdc-row,
.mdc-data-table__content {
  font-size: 1em !important;
}

.mdc-list-item__primary-text {
  display: flex;
  align-items: center;
  column-gap: 10px;
}

.mat-toolbar {
  display: flex;
  justify-content: space-between;
}

mat-dialog-actions.mat-mdc-dialog-actions {
  display: flex;
  justify-content: center;
  align-items: center;
}

mat-snack-bar-container.error .mdc-snackbar__surface {
  background-color: #faa0a0;

  .mdc-button__label,
  .mat-mdc-snack-bar-label .mdc-snackbar__label {
    color: black;
  }
}

.content_container {
  padding: 24px;
  display: flex;
  flex-direction: column;
  row-gap: 10px;
  justify-content: flex-start;
}

div.copy {
  cursor: pointer;
  color: $dark-text;
  font-family: "Space Mono";
  width: 100%;
  word-wrap: break-word;
}

div.copy,
a:link,
a:visited,
a:active {
  text-decoration: none;
  //color: map-get($map: $mat-accent, $key: darker);
  color: $dark-link;
}

.darkTheme {
  div.copy,
  a:link,
  a:visited,
  a:active {
    color: $light-link;
  }

  .toolbar {
    background-color: $dark-background;
  }

  .mat-drawer {
    background-color: $dark-background !important;
  }

  // todo: AndyQus: adopted, the style is to global and overwrites other styles.
  // button[color="accent"] {
  //   background-color: $light-link !important;
  // }
}

.mat-drawer {
  width: 250px;
}
.toolbar {
  padding: 0 !important;
}

a:hover {
  text-decoration: underline;
}

.navigation .mat-drawer-inner-container {
  display: flex;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

// stuff for mobile devices

@media screen and (max-width: 1199px) {
  app-navigation.isMobile {
    margin: 5px;

    .desktopOnly {
      display: none;
    }
  }

  app-navigation.isDesktop {
    .desktopOnly {
      display: none;
    }
  }
}

@media screen and (min-width: 1200px) {
  app-navigation.isDesktop {
    .mobileOnly {
      display: none;
    }
  }
}

h1 {
  font-size: 1.5em;
}

h2 {
  margin-top: 5px;
  font-size: 1.2em;
}

/* status buttons start*/

.status-buttons {
  // Config
  $circle-size: 40px;

  // Unfortunatly we need a wrapper element containing the fixed width for centering the button within the animtion (you could also apply the width as an inline style).
  .loading-btn-wrapper {
    display: inline-block;
    width: 50px;
    height: $circle-size;

    text-align: center;
  }

  .loading-btn {
    $root: &;

    position: relative;

    display: inline-block;
    width: 100%;
    height: 100%;

    background: #03a9f4;

    border: 0;
    border-radius: 24px;

    cursor: pointer;

    transition: all 0.33s ease-in-out;

    &:hover {
      background: #2196f3;
    }

    &,
    &:focus {
      outline: none;
    }

    // Styles for all states
    &--pending,
    &--success,
    &--unknown,
    &--confirmed,
    &--fail {
      // Morph button to circle (width equals height)
      width: $circle-size;

      // Prevent any further clicks triggering events during animation
      pointer-events: none;
      cursor: default;

      // Hide text
      #{$root}__text {
        opacity: 0;
      }
    }

    // State "pending"
    // Show loading indicator
    &--pending:before {
      content: "";

      position: absolute;
      top: 50%;
      left: 50%;

      display: inline-block;

      // Can't use percentage here as we already show this icon during morph animation
      height: #{$circle-size * 0.7};
      width: #{$circle-size * 0.7};

      border: 3px solid rgba(255, 255, 255, 0.33);
      border-top-color: #fff;
      border-radius: 50%;

      animation: loading-btn--fade-in 0.33s ease,
        loading-btn--rotation 0.66s linear 0s infinite;
    }

    // Success state - show check icon
    &--success {
      // Different background color (also on hover)
      &,
      &:hover {
        background: #8bc34a;
      }

      // Use "after" pseudo to trigger new fade in animation, as "before" is already used on "--pending"
      &:after {
        content: "";

        position: absolute;
        top: 50%;
        left: 50%;

        // Simulate checkmark icon
        display: inline-block;
        height: 25%;
        width: 50%;

        border: 3px solid #fff;
        border-top-width: 0;
        border-right-width: 0;

        transform: translate(-50%, -75%) rotate(-45deg);

        animation: loading-btn--fade-in 0.6s ease;
      }
    }

    // Success state - show check icon
    &--confirmed {
      // Different background color (also on hover)
      &,
      &:hover {
        background: #c0c0c0;
      }

      // Use "after" pseudo to trigger new fade in animation, as "before" is already used on "--pending"
      &:after {
        content: "";

        position: absolute;
        top: 50%;
        left: 50%;

        // Simulate checkmark icon
        // display: inline-block;
        // height: 25%;
        // width: 50%;

        // border: 3px solid #fff;
        // border-top-width: 0;
        // border-right-width: 0;

        //transform: translate(-50%, -75%) rotate(-45deg);

        animation: loading-btn--fade-in 0.6s ease;
      }
    }

    &--unknown {
      // Different background color (also on hover)
      &,
      &:hover {
        background: gray;
      }

      // Use "after" pseudo to trigger new fade in animation, as "before" is already used on "--pending"
      &:after {
        content: "?";

        font-weight: bold;
        color: white;

        position: absolute;
        top: 50%;
        left: 50%;

        // Simulate cross icon
        display: inline-block;
        height: 65%;
        width: 65%;

        transform: translate(-50%, -25%) rotate(-0deg);

        animation: loading-btn--fade-in 0.6s ease;
      }
    }

    // Fail state - show cross icon
    &--fail {
      // Different background color (also on hover)
      &,
      &:hover {
        background: #ff5722;
      }

      // Use "after" pseudo to trigger new fade in animation, as "before" is already used on "--pending"
      &:after {
        content: "";

        position: absolute;
        top: 50%;
        left: 50%;

        // Simulate cross icon
        display: inline-block;
        height: 65%;
        width: 65%;

        // Using background gradient is the only solution creating a cross with a single element
        background: linear-gradient(
            to bottom,
            transparent 44%,
            #fff 44%,
            #fff 56%,
            transparent 56%
          ),
          linear-gradient(
            to right,
            transparent 44%,
            #fff 44%,
            #fff 56%,
            transparent 56%
          );

        transform: translate(-50%, -50%) rotate(-45deg);

        animation: loading-btn--fade-in 0.6s ease;
      }
    }

    // Text has to be positioned absolute in order prevent line-breaks or trimming of text when morphing button to circle.
    &__text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;

      font-size: 13px;
      color: #fff;

      transition: inherit;
    }
  }

  /**
* Animations
*/

  @keyframes loading-btn--fade-in {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  @keyframes loading-btn--rotation {
    0% {
      transform: translate(-50%, -50%) rotate(0deg);
    }

    100% {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  /**
* Optical stuff - has nothing todo with button animation.
*/

  .state-list {
    margin-bottom: 12px;

    .loading-btn-wrapper {
      background: repeating-linear-gradient(
        45deg,
        #fff,
        #fff 10px,
        #f0f0f0 10px,
        #f0f0f0 20px
      );
    }
  }

  .loading-btn-wrapper {
    & + & {
      margin-left: 8px;
    }
  }
}

/* status buttons end */

/* balance page start */

.is-mobile .transaction-list {
  margin-right: 0px;
  margin-left: 0px;

  .copy span {
    word-break: break-all;
  }

  .trans-amount {
    min-width: 150px !important;
  }
}

/* balance page end */

.is-mobile {
  h1 {
    text-align: center;
  }

  .content_container {
    padding: 16px !important;
  }

  // todo: AndyQus: removed this, because it is to "global" and can cause issues at several places joetom

  // button .mdc-button{
  //   font-size: 18px;
  //   margin: 0px 10px 10px 10px;
  //   min-width: 290px;
  //   max-width: 290px;
  //   min-height: 50px;
  //   hyphens: auto;
  // }

  // .mdc-button{
  //   font-size: 18px;
  //   margin: 0px 10px 10px 10px;
  //   min-width: 290px;
  //   max-width: 290px;
  //   min-height: 50px;
  //   hyphens: auto;
  // }
}

.mdc-button {
  margin: 0px 10px 15px 10px;
  min-height: 40px;
}

// todo: AndyQus: remove, to global

// button{
//   margin: 0px 10px 15px 10px;
//   min-height: 40px;
// }

.target-highlight {
  animation: highlight 2s;
}

@keyframes highlight {
  0% {
    color: none;
  }
  50% {
    font-weight: bold;
  }
  100% {
    color: none;
  }
}

.alignRight,
.alignRight .mat-sort-header-container,
.alignRight .mat-sort-header-content,
.alignRight .mdc-data-table__cell {
  text-align: right !important;
  justify-content: right;
}
.flex-center,
.flex-halign-center {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.flex-valign-center {
  display: flex;
  align-items: center;
}
.flex-halign-right {
  justify-content: right;
}
.flex-halign-left {
  justify-content: left;
}
.word-break {
  word-break: break-all;
}
.toolbar {
  background-color: #ffffff;
}
hr {
  border: none;
  height: 1px;
  /* Set the hr color */
  color: gray; /* old IE */
  background-color: gray;
}

// todo: AndyQus: removed
// .mat-mdc-select-panel{
//   background-color: gray !important;
// }

.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon {
  fill: black !important;
}

.mdc-switch.mdc-switch--selected .mdc-switch__track {
  background-color: rgb(224, 224, 224);
}

.window-drag {
  -webkit-app-region: drag;
}
.window-no-drag {
  -webkit-app-region: no-drag;
}

.windowBorder .container {
  border: 1px solid gray;
}
.flex {
  display: flex;
}
.flex-wrap {
  flex-wrap: wrap;
}
@keyframes blink {
  0% {
    color: red;
  }
  50% {
    color: inherit;
  }
  100% {
    color: red;
  }
}
.danger {
  animation: blink 1s infinite;
}

// /*New Design*/

.blurred {
  filter: blur(5px);
}

.important {
  display: flex;
  align-items: center;
  column-gap: 10px;
  font-size: 1.1em;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.cdk-overlay-pane {
  max-width: 750px;
}

.start_container {
  padding: 10px;
  display: flex;
  flex-direction: column;
  row-gap: 10px;
  text-align: center;
}

.logo-title {
  border: 1px solid rgba(255, 255, 255, 0.33);
  border-top-color: #fff;
  border-radius: 5%;
  max-width: 40%;
  height: auto;
  margin: 50px 0px 50px 0px;
}

@media (max-width: 800px) {
  .logo-title {
    max-width: 20%;
  }
}

.title {
  text-align: center;
  .wallet-icon {
    height: 100px;
  }
}

.mdc-data-table__table {
  border-spacing: revert-layer !important;
}

.mat-mdc-card-content:last-child {
  padding: 24px;
}

.mat-mdc-text-field-wrapper {
  border-radius: 8px !important;
}

.mat-mdc-card {
  background-color: $light-bg-darker-2 !important;
  border-color: $light-bg-darker-30 !important;
  box-shadow: $light-bg-darker-30 !important;
  --mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, 0.5),
    0px 1px 1px 0px rgba(0, 0, 0, 0.5), 0px 1px 3px 0px rgba(0, 0, 0, 0.5) !important;
  border-radius: 12px !important;
}

.proposal-card {
  margin-bottom: 20px;
}

.dashboard-wallet-name {
  font-size: 16px;
  // color:$light-text;
}
.dashboard-balance-name {
  font-size: 35px;
  color: $dark-text;
}
.dashboard-amount-name {
  font-size: 16px;
  color: $dark-primary-text;
}

.dashboard-currency-name {
  color: $dark-primary-text;
}

.isPositiv {
  color: $dark-positiv-color;
}

.isNegativ {
  color: $dark-negativ-color;
}

// analog bootstrap

.row {
  display: flex;
  flex-wrap: wrap;
}

// todo: AndyQus: adjusted to not have horizontal scrolling on mobile

// .col{
//  min-width: 380px;
//  margin-right: 20px;
// }

.col-1 {
  flex: 0 0 8.333333%;
  max-width: 8.333333%;
}
.col-2 {
  flex: 0 0 16.666667%;
  max-width: 16.666667%;
}
.col-3 {
  flex: 0 0 25%;
  max-width: 25%;
}
.col-4 {
  flex: 0 0 33.333333%;
  max-width: 33.333333%;
}
.col-5 {
  flex: 0 0 41.666667%;
  max-width: 41.666667%;
}
.col-6 {
  flex: 0 0 50%;
  max-width: 50%;
}
.col-7 {
  flex: 0 0 58.333333%;
  max-width: 58.333333%;
}
.col-8 {
  flex: 0 0 66.666667%;
  max-width: 66.666667%;
}
.col-9 {
  flex: 0 0 75%;
  max-width: 75%;
}
.col-10 {
  flex: 0 0 83.333333%;
  max-width: 83.333333%;
}
.col-11 {
  flex: 0 0 91.666667%;
  max-width: 91.666667%;
}
.col-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

/* Mobile Phone */
@media (max-width: 896px) {
  .col-sm-1 {
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-sm-2 {
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-sm-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-sm-4 {
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-sm-5 {
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-sm-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-sm-7 {
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-sm-8 {
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-sm-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-sm-10 {
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-sm-11 {
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-sm-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
}

.button-container {
  margin-top: 16px;
  display: flex;
  justify-content: space-around;
  gap: 2px;
  flex-wrap: wrap;
  row-gap: 2px;
}
